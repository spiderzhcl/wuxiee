function fetchhtk(dmpid, divid) {    $('#tbodyContent tr[name="pids"]').remove();    $.ajax({url: "http://118.26.150.231/dmap/htk?uid=" + dmpid,        callback: "receive",        dataType: "jsonp",        jsonp: "callback",        type: "get",        async: false,        success: function(user) {            var pro = eval(user[0].info);            for (var idx in pro) {                var lp = '', lc = '', lo = '', pc = '', sc = '', sd = '', cc = '', cp = '', op = '', oc = '', tar = '';                if (typeof (pro[idx].lp) !== "undefined") {                    var myDate = new Date(parseInt(pro[idx].lp) * 1000);                    lp = format(myDate, "yyyyMMdd h:mm:ss");                }                if (typeof (pro[idx].lc) !== "undefined") {                    var myDate = new Date(parseInt(pro[idx].lc) * 1000);                    lc = format(myDate, "yyyyMMdd h:mm:ss");                }                if (typeof (pro[idx].lo) !== "undefined") {                    var myDate = new Date(parseInt(pro[idx].lo) * 1000);                    lo = format(myDate, "yyyyMMdd h:mm:ss");                }                if (typeof (pro[idx].pc) !== "undefined")                    pc = pro[idx].pc;                if (typeof (pro[idx].sc) !== "undefined")                    sc = pro[idx].sc;                if (typeof (pro[idx].cc) !== "undefined")                    cc = pro[idx].cc;                if (typeof (pro[idx].oc) !== "undefined")                    oc = pro[idx].oc;                if (typeof (pro[idx].sd) !== "undefined")                    sd = pro[idx].sd;                if (typeof (pro[idx].cp) !== "undefined")                    cp = pro[idx].cp;                if (typeof (pro[idx].op) !== "undefined")                    op = pro[idx].op;                if (typeof (pro[idx].tar) !== "undefined")                    tar = pro[idx].tar;                var strhtml = "<tr name='pids'>";                strhtml = strhtml + "<td>" + idx + "</td>";                strhtml = strhtml + "<td><div id='project" + idx + "'></div></td>";                strhtml = strhtml + "<td>" + pc + "</td>";                strhtml = strhtml + "<td>" + lp + "</td>";                strhtml = strhtml + "<td>" + sc + "</td>";                strhtml = strhtml + "<td>" + sd + "</td>";                strhtml = strhtml + "<td>" + cc + "</td>";                strhtml = strhtml + "<td>" + cp + "</td>";                strhtml = strhtml + "<td>" + lc + "</td>";                strhtml = strhtml + "<td>" + oc + "</td>";                strhtml = strhtml + "<td>" + op + "</td>";                strhtml = strhtml + "<td>" + lo + "</td>";                strhtml = strhtml + "<td>" + tar + "</td>";                strhtml = strhtml + "<td>" + loadIframe(idx) + "</td>";                strhtml += "</tr>";                $('#' + divid).after(strhtml);            }            for (var idx in pro) {                getProjectName(idx, 'project');            }        },        error: function(e) {        }});}function loadIframe(project) {    var myframe = "<div><iframe src=\"http://adwapi2.emarbox.com/target/target?pid=";    myframe = myframe + project;    myframe = myframe + "\" /></iframe></div>";    return myframe;}function processTarget(targets) {    var tars = Number(targets).toString(2);    var ret = "";    for (index  in  tars) {        if ('1' === tars.charAt(index)) {            ret = ret + (tars.length - index) + ",";        }    }    return ret;}function getProjectName(pid, id_pre) {    $.ajax({        url: "http://118.26.150.231/dmap/project?pid=" + pid,        callback: "receive",        dataType: "jsonp",        jsonp: "callback",        type: "get",        async: false,        success: function(json) {            $('#' + id_pre + pid).html(json[0].project);        }    });}function redisstatus(divid, urlaction) {    $('#tbodyContent tr[name="pids"]').remove();    $.ajax({url: "http://118.26.150.231/dmap/" + urlaction,        callback: "receive",        dataType: "jsonp",        jsonp: "callback",        type: "get",        async: false,        success: function(data) {            for (var idx in data) {                var ip = '', port = '', dbsize = '', memsize = '', qps = '', clients = '', mem_fragmentation_ratio = '';                if (typeof (data[idx].ip) !== "undefined")                    ip = data[idx].ip.replace("118.26.", "");                if (typeof (data[idx].port) !== "undefined")                    port = data[idx].port;                if (typeof (data[idx].dbsize) !== "undefined")                    dbsize = data[idx].dbsize;                if (typeof (data[idx].memsize) !== "undefined")                    memsize = data[idx].memsize;                if (typeof (data[idx].qps) !== "undefined")                    qps = data[idx].qps;                if (typeof (data[idx].clients) !== "undefined")                    clients = data[idx].clients;                if (typeof (data[idx].mem_fragmentation_ratio) !== "undefined")                    mem_fragmentation_ratio = data[idx].mem_fragmentation_ratio;                var strhtml = "<tr name='pids'>";                strhtml = strhtml + "<td>" + ip + "</td>";                strhtml = strhtml + "<td>" + port + "</td>";                strhtml = strhtml + "<td>" + dbsize + "</td>";                strhtml = strhtml + "<td>" + memsize + "</td>";                strhtml = strhtml + "<td>" + qps + "</td>";                strhtml = strhtml + "<td>" + clients + "</td>";                strhtml = strhtml + "<td>" + mem_fragmentation_ratio + "</td>";                strhtml += "</tr>";                $('#' + divid).after(strhtml);            }        },        error: function(e) {        }});}function rtbtimeout(type, divid, title) {    if (type === undefined || type === '') {        type = 'bidto';    }    if (title === undefined || title === '') {        title = 'Bidding Timeout';    }    $.ajax({url: "http://118.26.150.231/dmap/rtbto?t=" + type,        callback: "receive",        dataType: "jsonp",        jsonp: "callback",        type: "get",        async: false,        success: function(data) {            DrawLines(data, divid, title);        },        error: function(e) {        }});}function bscost(type, divid, title) {    if (type === undefined || type === '') {        type = '';    }    if (title === undefined || title === '') {        title = 'Cost Monitor';    }    $.ajax({url: "http://118.26.150.231/dmap/bscost?t=" + type,        callback: "receive",        dataType: "jsonp",        jsonp: "callback",        type: "get",        async: false,        success: function(data) {            DrawLines(data, divid, title);        },        error: function(e) {        }});}function users(type, divid, title, data) {    if (type === undefined || type === '') {        type = 'project';    }    if (title === undefined || title === '') {        title = '项目人群概况';    }    $.ajax({url: "http://118.26.150.231/dmap/prjusers?t=" + type + "&d=" + data,        callback: "receive",        dataType: "jsonp",        jsonp: "callback",        type: "get",        async: false,        success: function(data) {            if (type === 'project') {                DrawXBar(data, divid, title);            } else if (type === 'time') {                DrawBar(data, divid, title);            }        },        error: function(e) {        }});}function exesql(type, divid, title, data) {    $.ajax({        type: "GET",        url: "http://118.26.150.231/dmap/common",        callback: "receive",        dataType: "jsonp",        jsonp: "callback",        data: {'sql': data},        async: false,        success: function(resultdata) {            DrawLinesMutil(resultdata, divid, title);        },        error: function(e) {        }    });}function getdmpid() {    var arr = document.cookie.match(new RegExp("(^| )" + "_edc" + "=([^;]*)(;|$)"));    if (arr !== null) {        return unescape(arr[2]);    }    return null;}